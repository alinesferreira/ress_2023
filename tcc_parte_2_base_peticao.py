# -*- coding: utf-8 -*-
"""TCC_Parte_2_base_peticao

Automatically generated by Colaboratory.


"""

# Bibliotecas

import pandas as pd

# Para evitar o erro que o colab excedeu a capacidade

from pprint import pprint

printable = 'long statement'
pprint(printable)

# Para mostrar todas as colunas

pd.set_option('display.max_columns', None)

# Carregar e abrir o arquivo
peticao = pd.read_csv('peticao.csv', encoding = 'latin-1', sep='|', low_memory = False)

"""## Descreve a base de dados e ajusta colunas"""

# Detalha informações de variáveis do tipo número inteiros e contínuos
peticao.select_dtypes(include= ['float','int']).info()

# Detalha informações de variáveis do tipo Objeto
peticao.select_dtypes(include='object').info()

# Para extrair o nome das colunas

# iterating the columns
for col in peticao.columns:
    print(col)


peticao.rename(columns={'CO_EAN_APRP_SM': 'EAN',
                        'CO_GGREM_APR_SM': 'GGREM'}, inplace = True)

peticao = peticao.drop(columns = ['#CO_APRESENTACAO_PETICAO_SAMMED',
                                  'CO_PRODUTO_SAMMED_DATAVISA',
                                  'CO_APRESENTACAO_SAMMED_DV',
                                  'CO_EMPRESA_SAMMED_DATAVISA',
                                  'CO_EAN2_APRP_SM',
                                  'CO_EAN3_APRP_SM',
                                  'NO_CAT_PRETENDIDA_APR_SM',
                                  'NO_CAT_APROVADA_APR_SM'])

"""## Exclusão de LINHAS na base peticao

### Drop 1: EAN em branco (58 linhas)
"""

drop1 =peticao[peticao['EAN'].isnull()]

drop1.to_csv('drop1.csv', index = False)

# Retira as linhas com NU_EAN_SM em branco
peticao.dropna(subset=['EAN'], inplace=True)

"""### Drop 2: EAN duplicados"""

# Para manter apenas a linha com a data de entrada da petição mais antiga para os casos com o EAN duplicado
peticao = peticao.sort_values('DT_ENTRADA_PETICAO_SM')

# Salva as linhas duplicadas no drop2
drop2 = peticao[peticao.duplicated(subset='EAN')]

drop2.to_csv('drop2.csv', index = False)

# Mantém apeanas a ocorrência mais antiga das linhas com EAN duplicado com base na data de entrada da petição SAMMED

peticao = peticao.drop_duplicates ('EAN', keep = 'first')

"""### Salva base peticao trabalhada em um arquivo csv"""

peticao.to_csv('peticao_final.csv', index = False)

# esta base de dados será mesclada com a chave EAN com a base gestor e com a chave número do processo com a base de registro